name: CI / CD
on:
  push:
    branches: [master, next, next-major, alpha, beta]
  pull_request:
    branches: ["*"]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - run: echo ${{github.ref}} # if: github.event_name == 'push'  && github.ref == 'refs/heads/master' ---> Push && Master

      - run: echo Condition met
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'

      - name: Begin CI...
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint commit message
        uses: wagoid/commitlint-github-action@v1
          with:
            configFile: package.json

      - name: Use Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      # - name: Cache node modules (npm)
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
      #     key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-npm-

      - name: Cache node modules (yarn)
        uses: actions/cache@v1
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn # npm install --no-audit # `npm ci` is not used, because `node_modules` are cached, and `npm ci` deletes `node_modules`.
        env:
          CI: true

      - name: Run linters
        uses: samuelmeuli/lint-action@v1
        with:
          github_token: ${{ secrets.github_token }}
          eslint: true
          eslint_extensions: js,jsx,ts,tsx,vue
          eslint_args: --max-warnings 0
          prettier: true
          prettier_extensions: json,less,css,md,gql,graphql,html,yaml
          prettier_args: --ignore-path .eslintignore

      # - name: Lint and create report
      #   run: yarn lint --output-file eslint_report.json --format json
      #   continue-on-error: true

      # - name: Annotate linting results
      #   uses: ataylorme/eslint-annotate-action@1.0.4
      #   with:
      #     repo-token: "${{ secrets.GITHUB_TOKEN }}"
      #     report-json: "eslint_report.json"

      # - name: Upload ESLint report
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: eslint_report.json
      #     path: eslint_report.json

      # - name: Check format
      #   run: yarn format

      - name: Test
        run: yarn test --ci --coverage --maxWorkers=2
        env:
          CI: true

      - name: Build
        run: yarn build
        env:
          CI: true

      - name: Create README.md
        run: npx devkeeper-docs readme
        env:
          CI: true

      - name: Commit changes
        uses: EndBug/add-and-commit@v4
        with:
          message: "docs: auto generate README from template"
          add: "README.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
